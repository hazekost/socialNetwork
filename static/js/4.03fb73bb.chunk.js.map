{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.ts","components/common/FormsControls/FormsControls.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/noImage.png","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","props","child","hasError","touched","error","className","s","formControl","children","Textarea","restProps","Input","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileInfo","profile","Preloader","description","src","photos","large","noImage","fullName","aboutMe","Post","post","text","message","likeCount","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","name","placeholder","validate","MyPosts","React","memo","myPosts","formData","AddPost","newPostText","posts","state","map","p","id","MyPostsContainer","connect","profilePage","Profile","ProfileContainer","userId","Number","this","match","params","authorizedUserId","history","getProfile","getStatus","Component","compose","userStatus","auth","getUserProfile","withRouter"],"mappings":"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","file":"static/js/4.03fb73bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1LhEm\",\"error\":\"FormsControls_error__2f6LL\",\"formSummaryError\":\"FormsControls_formSummaryError__3uso9\"};","export const required = (value: string) => {\r\n\r\n    if (value) return undefined\r\n\r\n    return \"field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\r\n    return undefined\r\n}","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\nconst FormControl = ({input, meta, child, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError && s.error)}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__nTh5L\",\"description\":\"ProfileInfo_description__30zCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__O_io6\",\"posts\":\"MyPosts_posts__2mrWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2LMAm\",\"text\":\"Post_text__2dI0X\"};","export default __webpack_public_path__ + \"static/media/noImage.8cc1c33d.png\";","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && <span onDoubleClick={activateEditMode}>Status: {status}</span>}\r\n            {editMode && <input autoFocus onChange={onStatusChange} onBlur={deActivateEditMode} value={status}/>}\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport {userProfileType} from \"../../../Redux/profile-reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport noImage from \"../../../assets/images/noImage.png\"\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: userProfileType|null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            {/*<div className={s.image}>\r\n                <img\r\n                    src={\"https://uploads.sitepoint.com/wp-content/uploads/2017/04/1493235373large_react_apps_A-01.png\"}/>\r\n            </div>*/}\r\n            {!props.profile && <Preloader/>}\r\n            <div className={s.description}>\r\n                <img src={props.profile?.photos.large === null ? noImage : props.profile?.photos.large}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <div>Name: {props.profile?.fullName}</div>\r\n                <div>About Me: {props.profile?.aboutMe}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\ntype PostPropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport const Post: React.FC<PostPropsType> = (props: PostPropsType) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={\"https://themindsetproject.com.au/wp-content/uploads/2017/08/avatar-icon.png\"}/>\r\n            <span className={s.text}>\r\n                {props.message}\r\n            </span>\r\n            <div>\r\n                <span>Like {props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport {Post} from \"./Post/Post\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\ntype formDataType = {\r\n    newPostText: string\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<formDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} placeholder={\"Post Message\"}\r\n                       validate={[required, maxLength]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm<formDataType>({form: \"profileAddPostForm\"})(AddPostForm)\r\n\r\ntype MyPostsPropsType = {\r\n    AddPost: (value: string) => void\r\n    state: {\r\n        posts: Array<{ id: number, message: string, likeCount: number }>\r\n    }\r\n}\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    const addPost = (formData: formDataType) => {\r\n        props.AddPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My Posts</h3>\r\n            <AddPostFormRedux onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                {\r\n                    props.state.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {AddPost} from \"../../../Redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {rootStateType} from \"../../../Redux/reduxStore\";\r\n\r\nconst mapStateToProps = (state: rootStateType) => {\r\n\r\n    return {\r\n        state: state.profilePage\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {AddPost})(MyPosts)","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {userProfileType} from \"../../Redux/profile-reducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: userProfileType|null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>;\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {rootStateType} from \"../../Redux/reduxStore\";\r\nimport {getUserProfile, getStatus, updateStatus, userProfileType} from \"../../Redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\ntype ProfileContainerPropsType = {\r\n    profile: userProfileType | null\r\n    status: string\r\n    authorizedUserId: number\r\n    getProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\ntype routerType = {\r\n    userId: string | undefined\r\n}\r\ntype PropsType = RouteComponentProps<routerType> & ProfileContainerPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Profile profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: rootStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.userStatus,\r\n        authorizedUserId: state.auth.id,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile: getUserProfile, getStatus, updateStatus}), withRouter)(ProfileContainer)\r\n"],"sourceRoot":""}