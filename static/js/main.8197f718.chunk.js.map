{"version":3,"sources":["components/Navbar/Navbar.module.css","reportWebVitals.ts","Redux/app-reducer.ts","Redux/reduxStore.ts","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Header/HeaderConstainer.tsx","hoc/withSuspense.tsx","App.tsx","index.tsx","assets/images/J7eF9.gif","components/common/Preloader/Preloader.tsx","Redux/auth-reducer.ts","components/Header/Header.module.css","Redux/profile-reducer.ts","Redux/dialogs-reducer.ts","Redux/users-reducer.ts","components/common/Preloader/Preloader.module.css","api/networkAPI.ts"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","initialized","rootReducer","combineReducers","profilePage","profileReducer","messagesPage","dialogsReducer","userPage","usersReducer","auth","authReducer","app","state","action","type","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","className","s","nav","item","to","activeClassName","activeLink","Header","props","header","src","loginBlock","isFetching","Preloader","isAuth","login","onClick","logOut","HeaderContainer","this","logout","React","Component","connect","logoutTC","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","UsersContainer","Login","App","initializeAppTC","path","render","withRouter","dispatch","promise","getAuthTC","Promise","all","ReactDOM","document","getElementById","preload","preloader","id","email","data","setAuth","a","networkAPI","getAuth","response","resultCode","loginTC","password","rememberMe","message","messages","length","stopSubmit","_error","posts","likeCount","profile","userStatus","value","status","filter","p","AddPost","SetUserStatus","getUserProfile","userId","getProfile","getStatus","updateStatus","dialogs","name","AddMessage","users","totalCount","pageSize","currentPage","followingInProgress","map","u","userID","followed","follow","unFollow","setCurrentPage","setFetching","setFollowing","requestUsersTC","getUsers","items","followUnFollowFlow","apiMethod","actionCreator","userFollow","bind","userUnFollow","instance","axios","create","baseURL","withCredentials","headers","get","post","delete","put"],"mappings":"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","file":"static/js/main.8197f718.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__18B31\",\"item\":\"Navbar_item__3QwZa\",\"activeLink\":\"Navbar_activeLink__2VC1T\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Dispatch} from \"redux\";\r\nimport {getAuthTC} from \"./auth-reducer\";\r\n\r\ntype initialStateType = {\r\n    initialized: boolean\r\n}\r\ntype setInitializedActionType = ReturnType<typeof setInitializedAC>\r\ntype ActionType = setInitializedActionType\r\n\r\nlet initialState: initialStateType = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALIZED\":\r\n            return {...state, initialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setInitializedAC = () => {\r\n    return {type: \"SET-INITIALIZED\"} as const\r\n}\r\n\r\nexport const initializeAppTC = () => (dispatch: Dispatch<any>) => {\r\n    let promise = dispatch(getAuthTC())\r\n        Promise.all([promise]).then(() => {\r\n        dispatch(setInitializedAC())\r\n    })\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {usersReducer} from \"./users-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    userPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport type rootStateType = ReturnType<typeof rootReducer>\r\n\r\n//@ts-ignore\r\nwindow.__store__ = store","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\"\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/profile\"} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/dialogs\"} activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/news\"} activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/music\"} activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/users\"} activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/settings\"} activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./Header.module.css\"\r\nimport {initialStateType} from \"../../Redux/auth-reducer\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\ntype HeaderPropsType = {\r\n    state: initialStateType\r\n    logOut: () => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = (props) => {\r\n    return <header className={s.header}>\r\n        <img src={\"https://cdn.iconscout.com/icon/free/png-512/react-1-282599.png\"}/>\r\n        <div className={s.loginBlock}>\r\n            {props.state.isFetching\r\n                ? <Preloader/>\r\n                : <div>{props.state.isAuth\r\n                    ? <div><div>{props.state.login}</div><button onClick={props.logOut}>LogOut</button></div>\r\n                    : <NavLink to={\"/login\"}>Login</NavLink>}</div>}\r\n        </div>\r\n    </header>\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {initialStateType, logoutTC} from \"../../Redux/auth-reducer\";\r\nimport {rootStateType} from \"../../Redux/reduxStore\";\r\n\r\ntype HeaderContainerPropsType = {\r\n    state: initialStateType\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    render() {\r\n        return <Header state={this.props.state} logOut={this.props.logout}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: rootStateType) => {\r\n    return {\r\n        state: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout: logoutTC})(HeaderContainer)","import {ComponentType} from \"react\";\r\nimport React from \"react\";\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const WithSuspense = (Component: ComponentType) => {\r\n    return () => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component/>\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/HeaderConstainer\";\nimport {connect} from 'react-redux';\nimport {compose} from \"redux\";\nimport {RouteComponentProps} from \"react-router\";\nimport {initializeAppTC} from \"./Redux/app-reducer\";\nimport {rootStateType} from \"./Redux/reduxStore\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {WithSuspense} from \"./hoc/withSuspense\";\n\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n// import UsersContainer from \"./components/Users/UsersContainer\";\n// import Login from \"./components/Login/Login\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"))\nconst Login = React.lazy(() => import(\"./components/Login/Login\"))\n\ntype AppPropsType = {\n    initializeAppTC: () => void\n    initialized: boolean\n}\ntype PropsType = RouteComponentProps & AppPropsType\n\nclass App extends React.Component<PropsType> {\n\n    componentDidMount() {\n        this.props.initializeAppTC()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className={\"app\"}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={\"app-content\"}>\n                    <Route path={\"/profile/:userId?\"} render={WithSuspense(ProfileContainer)}/>\n                    <Route path={\"/dialogs\"} render={WithSuspense(DialogsContainer)}/>\n                    <Route path={\"/users\"} render={WithSuspense(UsersContainer)}/>\n                    <Route path={\"/login\"} render={WithSuspense(Login)}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: rootStateType) => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nexport default compose<React.ComponentType>(withRouter, connect(mapStateToProps, {initializeAppTC}))(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./Redux/reduxStore\";\nimport {Provider} from \"react-redux\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/J7eF9.6f9ac78c.gif\";","import preloader from \"../../../assets/images/J7eF9.gif\";\r\nimport React from \"react\";\r\nimport s from \"./Preloader.module.css\"\r\n\r\nexport const Preloader = () => {\r\n    return <div><img className={s.preload} src={preloader}/></div>\r\n}","import {setFetchingReturnType} from \"./users-reducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {networkAPI} from \"../api/networkAPI\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype setAuthReturnType = ReturnType<typeof setAuth>\r\ntype ActionType = setAuthReturnType | setFetchingReturnType\r\nexport type initialStateType = {\r\n    id: number | null\r\n    login: string | null\r\n    email: string | null\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n}\r\nlet initialState: initialStateType = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"auth/SET-AUTH\":\r\n            return {...state, ...action.data}\r\n        case \"auth/SET-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setAuth = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: \"auth/SET-AUTH\",\r\n        data: {id, email, login, isAuth},\r\n    } as const\r\n}\r\n\r\nexport const getAuthTC = () => async (dispatch: Dispatch<ActionType>) => {\r\n    let response = await networkAPI.getAuth()\r\n    if (response.data.resultCode === 0) {\r\n        let {login, email, id} = response.data.data\r\n        dispatch(setAuth(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => async (dispatch: Dispatch<any>) => {\r\n    let response = await networkAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthTC())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"Login\", {_error: message}))\r\n    }\r\n}\r\n\r\n\r\nexport const logoutTC = () => async (dispatch: Dispatch<setAuthReturnType>) => {\r\n    let response = await networkAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch((setAuth(null, null, null, false)))\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1GOQp\",\"loginBlock\":\"Header_loginBlock__3Dydc\"};","import {Dispatch} from \"redux\";\r\nimport {networkAPI} from \"../api/networkAPI\";\r\n\r\ntype AddPostActionReturnType = {\r\n    type: \"profile/ADD-POST\"\r\n    value: string\r\n}\r\ntype setUserProfileReturnType = {\r\n    type: \"profile/SET-USER-PROFILE\"\r\n    profile: userProfileType\r\n}\r\ntype setUserStatusReturnType = {\r\n    type: \"profile/SET-USER-STATUS\",\r\n    status: string\r\n}\r\ntype DeletePostReturnType = ReturnType<typeof DeletePost>\r\ntype ActionType = AddPostActionReturnType | setUserProfileReturnType | setUserStatusReturnType | DeletePostReturnType\r\nexport type userProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        website: string\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube: string\r\n        github: string\r\n        mainLink: string\r\n    }\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\ntype initialStateType = {\r\n    posts: Array<{ id: number, message: string, likeCount: number }>\r\n    profile: userProfileType | null\r\n    userStatus: string\r\n}\r\n\r\nlet initialState: initialStateType = {\r\n    posts: [\r\n        {id: 1, message: \"Hi\", likeCount: 10},\r\n        {id: 2, message: \"Sup\", likeCount: 15}\r\n    ],\r\n    profile: null,\r\n    userStatus: \"\"\r\n}\r\n\r\nexport const profileReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"profile/ADD-POST\":\r\n            return {...state, posts: [...state.posts, {id: 3, message: action.value, likeCount: 0}]}\r\n        case \"profile/SET-USER-PROFILE\":\r\n            return {...state, profile: action.profile}\r\n        case \"profile/SET-USER-STATUS\":\r\n            return {...state, userStatus: action.status}\r\n        case \"profile/DELETE-POST\":\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.id)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AddPost = (value: string): AddPostActionReturnType => ({\r\n    type: \"profile/ADD-POST\",\r\n    value\r\n})\r\nconst SetUserProfile = (profile: userProfileType): setUserProfileReturnType => ({\r\n    type: \"profile/SET-USER-PROFILE\",\r\n    profile\r\n})\r\nconst SetUserStatus = (status: string): setUserStatusReturnType => ({\r\n    type: \"profile/SET-USER-STATUS\",\r\n    status\r\n})\r\nexport const DeletePost = (id: number) => {\r\n    return {\r\n        type: \"profile/DELETE-POST\",\r\n        id\r\n    } as const\r\n}\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch<ActionType>) => {\r\n    let response = await networkAPI.getProfile(userId)\r\n    dispatch(SetUserProfile(response.data))\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch: Dispatch<ActionType>) => {\r\n    let response = await networkAPI.getStatus(userId)\r\n    dispatch(SetUserStatus(response.data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch<ActionType>) => {\r\n    let response = await networkAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(SetUserStatus(status))\r\n    }\r\n}","type AddMessageActionType = {\r\n    type: \"ADD-MESSAGE\"\r\n    value: string\r\n}\r\ntype ActionType = AddMessageActionType\r\ntype initialStateType = {\r\n    dialogs: Array<{ id: number, name: string }>\r\n    messages: Array<{ id: number, message: string }>\r\n}\r\nlet initialState: initialStateType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Konstantin\"},\r\n        {id: 2, name: \"Alex\"},\r\n        {id: 3, name: \"John\"},\r\n        {id: 4, name: \"Ler\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"Yo\"},\r\n        {id: 3, message: \"Sup\"}\r\n    ]\r\n}\r\n\r\nexport const dialogsReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\":\r\n            return {...state, messages: [...state.messages, {id: 4, message: action.value}]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const AddMessage = (value: string): AddMessageActionType => ({\r\n    type: \"ADD-MESSAGE\",\r\n    value\r\n})","import {networkAPI} from \"../api/networkAPI\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type userType = {\r\n    id: number\r\n    photos: { small: string, large: string }\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    uniqueUrlName: string\r\n}\r\ntype followUnfollowReturnType = {\r\n    type: \"FOLLOW\"\r\n    userID: number\r\n}\r\ntype unFollowReturnType = {\r\n    type: \"UNFOLLOW\"\r\n    userID: number\r\n}\r\ntype setUsersReturnType = {\r\n    type: \"SET-USERS\"\r\n    users: Array<userType>\r\n}\r\ntype setCurrentPageReturnType = {\r\n    type: \"SET-CURRENT-PAGE\"\r\n    currentPage: number\r\n}\r\ntype setTotalUsersCountReturnType = {\r\n    type: \"SET-TOTAL-USERS-COUNT\"\r\n    totalCount: number\r\n}\r\nexport type setFetchingReturnType = {\r\n    type: \"auth/SET-FETCHING\"\r\n    isFetching: boolean\r\n}\r\ntype setFollowingReturnType = {\r\n    type: \"TOGGLE-FOLLOWING\"\r\n    userId: number\r\n    isFetching: boolean\r\n}\r\ntype ActionType = followUnfollowReturnType | unFollowReturnType | setUsersReturnType | setFollowingReturnType\r\n    | setCurrentPageReturnType | setTotalUsersCountReturnType | setFetchingReturnType\r\ntype initialStateType = {\r\n    users: Array<userType>\r\n    totalCount: number\r\n    pageSize: 5\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nlet initialState: initialStateType = {\r\n    users: [],\r\n    totalCount: 0,\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {...state, users: state.users.map(u => u.id === action.userID ? {...u, followed: true} : u)}\r\n        case \"UNFOLLOW\":\r\n            return {...state, users: state.users.map(u => u.id === action.userID ? {...u, followed: false} : u)}\r\n        case \"SET-USERS\":\r\n            return {...state, users: [...action.users]}\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"SET-TOTAL-USERS-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"auth/SET-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"TOGGLE-FOLLOWING\":\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const follow = (userID: number): followUnfollowReturnType => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        userID\r\n    }\r\n}\r\nexport const unFollow = (userID: number): unFollowReturnType => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        userID\r\n    }\r\n}\r\nexport const setUsers = (users: Array<userType>): setUsersReturnType => {\r\n    return {\r\n        type: \"SET-USERS\",\r\n        users: users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage: number): setCurrentPageReturnType => {\r\n    return {\r\n        type: \"SET-CURRENT-PAGE\",\r\n        currentPage\r\n    }\r\n}\r\nconst setUsersCount = (totalCount: number): setTotalUsersCountReturnType => {\r\n    return {\r\n        type: \"SET-TOTAL-USERS-COUNT\",\r\n        totalCount\r\n    }\r\n}\r\nexport const setFetching = (isFetching: boolean): setFetchingReturnType => {\r\n    return {\r\n        type: \"auth/SET-FETCHING\",\r\n        isFetching\r\n    }\r\n}\r\nexport const setFollowing = (userId: number, isFetching: boolean): setFollowingReturnType => {\r\n    return {\r\n        type: \"TOGGLE-FOLLOWING\",\r\n        userId,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const requestUsersTC = (currentPage: number, pageSize: number) => async (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(setFetching(true))\r\n    let response = await networkAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n    dispatch(setUsersCount(response.data.totalCount))\r\n}\r\n\r\nconst followUnFollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(setFollowing(userId, true))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setFollowing(userId, false))\r\n}\r\n\r\nexport const userFollow = (userId: number) => async (dispatch: Dispatch) => {\r\n    await followUnFollowFlow(dispatch, userId, networkAPI.follow.bind(networkAPI), follow)\r\n}\r\n\r\nexport const userUnFollow = (userId: number) => async (dispatch: Dispatch) => {\r\n    await followUnFollowFlow(dispatch, userId, networkAPI.unFollow.bind(networkAPI), unFollow)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preload\":\"Preloader_preload__jCNRq\"};","import axios from \"axios\";\r\n\r\ntype AuthReturnType = {\r\n    data: {\r\n        id: number\r\n        login: string\r\n        email: string\r\n    }\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    resultCode: number\r\n}\r\ntype getUsersReturnType = {\r\n    error: string\r\n    items: Array<{name: string, id: number, uniqueUrlName: string, photos: {small: string, large: string}, followed: boolean, status: string}>\r\n    totalCount: number\r\n}\r\ntype getUserProfileReturnType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        github: string\r\n        instagram: string\r\n        mainLink: string\r\n        twitter: string\r\n        vk: string\r\n        website: string\r\n        youtube: string\r\n    }\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    photos: {\r\n        large: string\r\n        small: string\r\n    }\r\n    userId: number\r\n}\r\nexport type followUnFollowUpdateStatusLoginReturnType = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: {}\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"api-key\": \"6c600c87-cd10-4399-80d8-d0a35356bfb5\"\r\n    }\r\n})\r\n\r\nexport const networkAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<getUsersReturnType>(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        return instance.get<getUserProfileReturnType>(`profile/${userId}`)\r\n    },\r\n    getAuth() {\r\n        return instance.get<AuthReturnType>(`auth/me`)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<followUnFollowUpdateStatusLoginReturnType>(`follow/${userId}`)\r\n    },\r\n    unFollow(userId: number) {\r\n        return instance.delete<followUnFollowUpdateStatusLoginReturnType>(`follow/${userId}`)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<followUnFollowUpdateStatusLoginReturnType>(`profile/status`, {status})\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`)\r\n    }\r\n}"],"sourceRoot":""}