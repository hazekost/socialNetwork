{"version":3,"sources":["components/Users/Users.module.css","components/Users/Paginator.module.css","components/Users/Paginator.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","Paginator","props","currentPage","onPageChanged","pageSize","portionSize","totalCount","pagesCount","Math","ceil","pagesArray","i","push","portionsCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","paginator","onClick","filter","p","map","selectedPage","pageNumber","Users","items","followingInProgress","follow","unFollow","u","to","id","userAva","alt","src","photos","large","avatar","name","followed","disabled","some","UsersContainer","page","state","changeUsersPageTC","setFollowTC","setUnFollowTC","this","getUsersTC","isFetching","Preloader","React","Component","connect","usersPage"],"mappings":"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","file":"static/js/4.071c4316.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAva\":\"Users_userAva__TFem7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Mxja\",\"pageNumber\":\"Paginator_pageNumber__2-qZe\",\"selectedPage\":\"Paginator_selectedPage__396r6\"};","import { useState } from \"react\"\r\nimport s from \"./Paginator.module.css\"\r\n\r\ntype UsersPropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize: number\r\n    onPageChanged: (page: number) => void\r\n}\r\n\r\nexport const Paginator: React.FC<UsersPropsType> = (props) => {\r\n\r\n    let { currentPage, onPageChanged, pageSize, portionSize, totalCount } = props\r\n\r\n    let pagesCount = Math.ceil(totalCount / pageSize)\r\n    let pagesArray = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pagesArray.push(i)\r\n    }\r\n\r\n    let portionsCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>}\r\n        {pagesArray.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {\r\n            return <span key={p}\r\n                onClick={() => onPageChanged(p)}\r\n                className={currentPage === p ? `${s.selectedPage} ${s.pageNumber}` : s.pageNumber}>{p}</span>\r\n        })}\r\n        {portionsCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>}\r\n    </div>\r\n}","import s from \"./Users.module.css\"\r\nimport avatar from \"../../assets/avatar.jpg\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { ItemType } from \"../../api/api\"\r\nimport { Paginator } from \"./Paginator\"\r\n\r\ntype UsersPropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    items: Array<ItemType>\r\n    followingInProgress: Array<number>\r\n    onPageChanged: (page: number) => void\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n}\r\n\r\nexport const Users: React.FC<UsersPropsType> = (props) => {\r\n\r\n    let { totalCount, pageSize, currentPage, items, followingInProgress, onPageChanged, follow, unFollow } = props\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} pageSize={pageSize} totalCount={totalCount} portionSize={10} onPageChanged={onPageChanged} />\r\n        {items.map(u => {\r\n\r\n            const followHandler = () => follow(u.id)\r\n            const unFollowHandler = () => unFollow(u.id)\r\n\r\n            return <div key={u.id}>\r\n                <span>\r\n                    <NavLink to={`profile/${u.id}`}>\r\n                        <img className={s.userAva} alt=\"\" src={u.photos.large ? u.photos.large : avatar} />\r\n                    </NavLink>\r\n                </span>\r\n                <span>\r\n                    {u.name}\r\n                </span>\r\n                <div>\r\n                    {u.followed ? <button disabled={followingInProgress.some(id => id === u.id)} onClick={unFollowHandler}>UnFollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === u.id)} onClick={followHandler}>Follow</button>}\r\n                </div>\r\n            </div>\r\n        })}\r\n    </div>\r\n}","import React from \"react\"\r\nimport { Users } from \"./Users\"\r\nimport { connect } from \"react-redux\"\r\nimport { AppRootStateType } from \"../../redux/redux-store\"\r\nimport { changeUsersPageTC, getUsersTC, setFollowTC, setUnFollowTC, UsersStateType } from \"../../redux/users-reducer\"\r\nimport { Preloader } from \"../common/Preloader\"\r\n\r\ntype UsersPropsType = {\r\n    state: UsersStateType\r\n    getUsersTC: (pageSize: number, currentPage: number) => void\r\n    changeUsersPageTC: (pageSize: number, page: number) => void\r\n    setFollowTC: (id: number) => void\r\n    setUnFollowTC: (id: number) => void\r\n}\r\n\r\nexport class UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        let { pageSize, currentPage } = this.props.state\r\n        this.props.getUsersTC(pageSize, currentPage)\r\n    }\r\n    onPageChanged = (page: number) => {\r\n        let { pageSize } = this.props.state\r\n        this.props.changeUsersPageTC(pageSize, page)\r\n    }\r\n    follow = (id: number) => {\r\n        this.props.setFollowTC(id)\r\n    }\r\n    unFollow = (id: number) => {\r\n        this.props.setUnFollowTC(id)\r\n    }\r\n\r\n    render() {\r\n        let { currentPage, items, pageSize, totalCount, isFetching, followingInProgress } = this.props.state\r\n        return <>\r\n            {isFetching && <Preloader />}\r\n            <Users currentPage={currentPage} items={items} pageSize={pageSize} totalCount={totalCount}\r\n                followingInProgress={followingInProgress} onPageChanged={this.onPageChanged}\r\n                follow={this.follow} unFollow={this.unFollow} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => ({\r\n    state: state.usersPage\r\n})\r\n\r\nexport default connect(mapStateToProps, { getUsersTC, changeUsersPageTC, setFollowTC, setUnFollowTC })(UsersContainer)"],"sourceRoot":""}